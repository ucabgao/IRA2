extend layout

block content
  .row
    .col-md-8
      h1 Request a Parse
      h3
        small We can only parse replays of public matches within the last 7 days.
      ol
        li Enter a match ID.
        li Prove your humanity.
        li We'll try to parse it for you!
      div#request
        .form-group
          input#match_id.form-control(type='text' name='match_id' placeholder='Match ID')
        .form-group
          if config.ENABLE_RECAPTCHA
            .g-recaptcha#recaptcha(data-sitekey=rc_public, data-theme="dark", data-callback="submit")
          else
            button.btn.btn-default(onclick="submit()") Request Parse
      #progContainer(style="display:none")
        img(src="/public/images/loading.gif", style="display:none")#loading
        .progress(style="display:none;")
          .progress-bar.progress-bar-info.progress-bar-striped.active#bar
        #messages

append footer_assets
  script(src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit",async,defer)
  //script(src="/socket.io/socket.io.js")
  script.
    var match_id;
    var socket;
    var checker;
    var onloadCallback = function() {
        grecaptcha.render('recaptcha',{sitekey: $('#recaptcha').attr('data-sitekey'), theme: "dark", callback: submit});
    };
    document.getElementById("match_id").value = window.location.hash.slice(1);
    function submit(response){
      $("#loading").css("display", "block");
      var field = document.getElementById("match_id");
      match_id = field.value;
      //field.value = "";    
      $.ajax({
      method: "POST",
      url: "/request_job",
      data: { match_id: match_id, response:response }
      })
      .done(function( msg ) {
        console.log(msg);
        if (msg.error){
          showError(msg.error);
        }
        else{
        checker = setInterval(function(){poll(msg.job.jobId)}, 2000);
      }
      });
      $("#request").hide('slow');
      $("#messages").empty();
      $("#progContainer").show('slow');
    }
    function showError(data){
          $("#messages").append("<div class='alert alert-danger' role='alert'>" + data + "</div>");
          $("#loading").css("display", "none");
          document.getElementById("bar").style.width = "0%";
          $("#request").show('slow');
          console.log("clearing interval %s", checker);
          clearInterval(checker);
          grecaptcha.reset();
    }
    function poll(job_id){
          $.ajax({
            url: "/request_job?id="+job_id
          })
          .done(function(msg) {
          console.log(msg);
            if (msg.state==="completed"){
            //job done
            window.location.assign("/matches/"+match_id);
            }
            else if(msg.error){
              showError(msg.error);
            }
            else if (msg.state==="failed") {
              showError("Failed to parse replay.  Please make sure the replay is available in client and has not expired.");
            }
            else if (msg.progress){
              var prog = msg.progress;
              console.log(prog);
              document.getElementById("bar").style.width = prog + "%";
              document.getElementById("bar").innerHTML = prog + "%";
            }
          });
      }
  //old socket.io code
  //-
    script.
      /*
      function submit(response){
        var field = document.getElementById("match_id");
        match_id = field.value;
        field.value = "";
        if (!socket){
          //set up the handlers
          socket = io.connect();
          socket.on('err', function(data){
            $("#messages").append("<div class='alert alert-danger' role='alert'>" + data + "</div>");
            $("#loading").css("display", "none");
            document.getElementById("bar").style.width = "0%";
            $("#request").show('slow');
            grecaptcha.reset();
          });
          socket.on('log', function(data){
            $("#messages").append("<div class='alert alert-info' role='alert'>" + data + "</div>");
            $("#loading").css("display", "block");
          });
          socket.on('prog', function(prog){
            document.getElementById("bar").style.width = prog + "%";
            document.getElementById("bar").innerHTML = prog + "%";
            $("#loading").css("display", "block");
          });
          socket.on('complete', function(){
            // redir to match page (?)
            window.location.assign("/matches/"+match_id);
          });
          }
          socket.emit('request', {
            match_id: match_id,
            response: response
          });
          $("#request").hide('slow');
          $("#messages").empty();
          $("#progContainer").show('slow');
      }
      */
