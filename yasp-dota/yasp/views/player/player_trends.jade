extend player

block playercontent
  .trends
    .row
      .col-md-12
        script.
          var heroes = !{JSON.stringify(constants.heroes)};
          var histogramData = {};
        //p: button.btn.btn-xs.btn-dark.toggle-button.bright-border.collapsed(onclick="showAll()") Show All
        //-
          each v, key in histograms
            if key in player.aggData
              - var collapsed = true
              button.btn.btn-xs.btn-dark.toggle-button.bright-border-collapsible(data-toggle="collapse" data-target="#chart-histogram-container-"+key, aria-expanded=collapsed ? "false" : "true", style="margin-right: 3px", class=collapsed ? "collapsed" : "", id="histogram-container-toggle-"+key class="histogram-toggle-button") #{key.split("_").map(function(s){ return s.charAt(0).toUpperCase() + s.slice(1)}).join(" ")}
        ul.nav.nav-pills
          each v, key in histograms
            if key in player.aggData
              li(class=subkey===key ? "active" : ""): a(href='/players/'+player.account_id+'/'+route+'/'+key + querystring) #{key.split("_").map(function(s){ return s.charAt(0).toUpperCase() + s.slice(1)}).join(" ")}
        each v, key in histograms
          if key in player.aggData && (subkey===key)
            - var val = player.aggData[key]
            - var avg = val.sum/val.n
            //- var collapsed = true
            section.histogram-section(id="chart-histogram-container-"+key, data-histogram=key, class=collapsed ? "collapse" : "")
              h3: abbr(title=tooltips[key]) #{key.split("_").map(function(s){ return s.charAt(0).toUpperCase() + s.slice(1)}).join(" ")} 
                small (#{val.n} matches)
              script.
                histogramData["#{key}"] = !{JSON.stringify({avgs: player.aggData[key].avgs})};
              div.histogram-chart(id="chart-histogram-"+key, data-histogram=key)
        
append footer_assets
  //-
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script src="https://rawgit.com/highslide-software/highcharts.com/master/js/themes/gray.js"></script>
    script(src="https://rawgit.com/nnnick/Chart.js/master/Chart.js")
  script.
    $(".histogram-chart").each(function() {
        var key = $(this).attr('data-histogram');
        var avgs = histogramData[key].avgs;
        createTrends(avgs, key);
    });
    
    //$("#histogram-container-toggle-kills").click();
    
    function showAll(){
      $(".histogram-toggle-button").each(function() {
        if ($(this).attr("aria-expanded")!=="true"){
          this.click();
        }
      });
    }
    
    function createTrends(avgs, key){
      var xs = avgs.map(function(a,i){return i;});
      //var avgVals = avgs.map(function(a,i){return a.avg;});
      var avgVals = avgs;
      var chart = c3.generate({
      bindto: document.getElementById("chart-histogram-"+key),
      data: {
          x: 'x',
          columns: [
              ['x'].concat(xs),
              [key].concat(avgVals)
          ]
      },
      type: "spline",
      point: {
      show: false
      },
      axis: {
        y: {
        tick:{
        format: function(d){return d.toFixed(2);}
        },
        label: "Mean"
        },
        x: {
        tick:{
            values: [0]
        },
        label: "Match #"
        }
    },
    tooltip:{
      format: {
        /*
        title: function(d){return moment.unix(avgs[d].start_time).format("dddd YYYY MMM DD");},
        value: function(value, ratio, id, ind){
        console.log(value, ratio, id, ind);
        var table = document.createElement('table');
        var tr1 = document.createElement('tr');
        var td1 = document.createElement('td');
        td1.innerHTML = "Hero";
        var td2 = document.createElement('td');
        td2.innerHTML = "Match";
        var td3 = document.createElement('td');
        td3.innerHTML = "Average";
        tr1.appendChild(td1);
        tr1.appendChild(td2);
        tr1.appendChild(td3);
        table.appendChild(tr1);
        var tr2 = document.createElement('tr');
        table.appendChild(tr2);
        var hero = document.createElement('td');
        var value = document.createElement('td');
        var avg = document.createElement('td');
        var img = document.createElement('img');
        img.src = heroes[avgs[ind].hero_id].img;
        img.class = "img-sm";
        hero.innerHTML = img.outerHTML;
        value.innerHTML = avgs[ind].val;
        avg.innerHTML = avgs[ind].avg;
        tr2.appendChild(hero);
        tr2.appendChild(value);
        tr2.appendChild(avg);
        return table.outerHTML;
        }
        */
      }
    }
    });
    }
    
    function createTrends2(avgs, key){
    $('#'+key).highcharts({
        chart: {
            type: 'line'
        },
        title: {
            text: key
        },
        series: [{
            name: key,
            data: avgs
        }]
      });
    }
    
    function createTrends3(avgs, key){
      var data = {
      labels: avgs.map(function(a){return "";}),
      datasets:[
      {
      label: key,
      data: avgs
      }
      ]
      };
      var options = {datasetFill: false};
      var ctx = document.getElementById(key).getContext("2d");
      var myNewChart = new Chart(ctx).Line(data, options);
    }