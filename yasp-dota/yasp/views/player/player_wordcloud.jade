extend player

block playercontent
  .row
    .col-md-12
      h3 Words said by this player in all chat
        small (#{player.aggData.my_word_counts.n} matches)
      #mywordcontainer
        canvas()#mywordcounts
      
      +ad("banner2")
      
      h3 Words read by this player in all chat
        small (#{player.aggData.all_word_counts.n} matches)
      #allwordcontainer
        canvas()#allwordcounts
      
      #tooltip
      
append footer_assets

  script.
    function isStopWord(word)
    {
    	var regex = new RegExp("\\b"+word+"\\b","i");
    	if(stopWords.search(regex) < 0)
    	{
    		return false;
    	} else
    	{
    		return true;	
    	}
    }
  
    var stopWords = "a,am,an,and,are,as,at,be,by,for,from,how,i,im,in,is,it,me,my,not,of,on,or,that,the,this,to,was,what,when,where,who,why,will,with,you";
    
    function populate_word_cloud (cloud_dom_id, word_counts) {
      var word_list = [];
      var max = 0;
      
      for (var key in word_counts){
          if (!isStopWord(key)){
            word_list.push([key, word_counts[key]]);
            if (word_counts[key] > max) {
              max = word_counts[key];
            }
          }
        }
      var element = document.getElementById(cloud_dom_id);
      var parent = element.parentElement;
      element.width = parent.clientWidth;
      element.height = parent.clientWidth*0.75;
      
      //howard's implementation
      var max_size = element.clientWidth/8;
      var min_size = 9;
      var scale = max_size/Math.log(max);
      //var scale = max_size/max;
      word_list.forEach(function(w){
        //original count for debugging
        w[2] = w[1];
        //take the log of each count and scale them up to top_size
        //use log since words such as "gg" tend to dominate
        w[1] = Math.max(Math.log(w[1])*scale, min_size);
        //w[1] = Math.max(w[1]*scale, min_size);

      });
      
      /*
        //albert's implementation
        max = max > 1000 ? 1000 : max;
        var scale = 300/max;
        //scale the words, min 10, max 400
        word_list.forEach(function(w){
          w[1] = Math.min(Math.max(Math.log(w[1])*w[1]*scale, 10), Math.min(Math.log(max)*400, 400));
        });
      */
      
      //sort the list to ensure most frequent words get displayed
      word_list = word_list.sort(function(a,b){
        return b[1] - a[1];
      });
      
      console.log(word_list);
      
      WordCloud(element, { list: word_list });
    }

    var my_counts = !{JSON.stringify(player.aggData.my_word_counts.counts)};
    var all_counts = !{JSON.stringify(player.aggData.all_word_counts.counts)};

    populate_word_cloud("mywordcounts", my_counts);
    populate_word_cloud("allwordcounts", all_counts);
